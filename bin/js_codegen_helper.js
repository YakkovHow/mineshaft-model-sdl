/**
 * If your javascript project dependent on this SDL package, then after generated model code, 
 * there are still things we are missing.
 * 
 * 1. Add '.js' to every import in all the javascript files generated by openapi-generator-cli.
 * eg. 
 * import ApiClient from './ApiClient'; 
 * => import ApiClient from './ApiClient.js'; 
 * 
 * 2. Add {"type": "model"} to package.json
 * 
 * How to use: node js_codegen_helper $codegenSrcPath $packageFilePath
 */
import fs from 'fs';

const modifyFile = (path) => {
    fs.readFile(path, 'utf8', function (err, data) {
        if (err) return console.log(err);

        var matchedLines = data.match(/^import [(A-Z)].*(?<!(\.js))';$/gm);
        if (matchedLines === null) return;

        for (let line of matchedLines) {
            var replace = line.slice(0, -2).concat(".js';");
            data = data.replace(line, replace);
        }
        fs.writeFile(path, data, 'utf8', function (err) {
            if (err) return console.log(err);
        });
    });
}

const traverseDirectory = (dirPath) => {
    fs.readdirSync(dirPath).forEach((item) => {
        var itemPath = dirPath + '/' + item;
        var stat = fs.statSync(itemPath);
        if (stat && stat.isDirectory()) {
            traverseDirectory(itemPath);
        } else {
            modifyFile(itemPath);
        }
    });

}

const modifyPackageFile = (path) => {
    fs.readFile(path, 'utf8', function (err, data) {
        if (err) return console.log(err);
        var jsonData = JSON.parse(data);
        jsonData.type = "module";
        fs.writeFile(path, JSON.stringify(jsonData, null, "\t"), 'utf8', function (err) {
            if (err) return console.log(err);
        });
    });
}

var args = process.argv.slice(2);
const codegenSrcPath = args[0]; // e.g. './codegen/src'
const packageFilePath = args[1]; // e.g. './codegen/package.json'

(() => {
    traverseDirectory(codegenSrcPath);
    modifyPackageFile(packageFilePath);
    console.log('Successfully ran js_codegen_helper.js !')
})();